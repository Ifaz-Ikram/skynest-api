name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [20, 22]
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: skynest
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d skynest" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=10

    env:
      PGHOST: localhost
      PGPORT: 5432
      PGDATABASE: skynest
      PGUSER: postgres
      PGPASSWORD: postgres
      JWT_SECRET: testsecret
      NODE_ENV: test
      PORT: 0

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Create .env
        run: |
          cat > .env << 'EOF'
          PGHOST=localhost
          PGPORT=5432
          PGDATABASE=skynest
          PGUSER=postgres
          PGPASSWORD=postgres
          JWT_SECRET=testsecret
          NODE_ENV=test
          PORT=0
          EOF

      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          until pg_isready -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -d "$PGDATABASE"; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Apply schema
        run: psql -h "$PGHOST" -p "$PGPORT" -U "$PGUSER" -d "$PGDATABASE" -f skynest_schema_nodb.sql

      - name: Install dependencies
        run: npm ci

      - name: Seed database
        run: |
          npm run db:seed
          npm run db:seed:sample

      - name: Run tests
        run: npm test --silent

  frontend:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package.json
      - name: Install deps
        working-directory: frontend
        run: npm ci
      - name: Build
        working-directory: frontend
        env:
          VITE_BASE: /app/
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
